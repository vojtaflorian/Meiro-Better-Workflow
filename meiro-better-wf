// ==UserScript==
// @name         Meiro Better Workflow 
// @namespace    http://tampermonkey.net/
// @version      2025-03-11
// @description  Meiro Better Workflow 
// @author       Vojta Florian
// @match        *.meiro.io/*
// @match        *.meiro.io/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=meiro.io
// @downloadURL  
// @updateURL    
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

// Funkce pro sledování textarea elementu a výpočet velikosti obsahu editoru
function monitorTextarea() {
    // Zkontrolujeme, zda aktuální URL obsahuje požadovanou cestu
    if (!window.location.href.includes("https://cdp.megapixel.meiro.io/channels/emails/campaigns")) {
        console.log('🔒 Skript není spuštěn, URL neodpovídá požadovanému vzoru.');
        return; // Skript se nespustí, pokud URL neodpovídá
    }

    console.log("🔎 Funkce pro monitorování textarea spuštěna...");

    const textareaElement = document.querySelector('textarea.ace_text-input');

    // Vytvoření nového divu pro zobrazení velikosti, pokud ještě neexistuje
    let sizeDisplayElement = document.getElementById('size-display');
    if (!sizeDisplayElement) {
        sizeDisplayElement = document.createElement('div');
        sizeDisplayElement.id = 'size-display';
        sizeDisplayElement.style.position = 'fixed';
        sizeDisplayElement.style.bottom = '10px';
        sizeDisplayElement.style.right = '10px';
        sizeDisplayElement.style.padding = '10px';
        sizeDisplayElement.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';
        sizeDisplayElement.style.color = 'white';
        sizeDisplayElement.style.borderRadius = '5px';
        sizeDisplayElement.style.fontSize = '14px';
        document.body.appendChild(sizeDisplayElement); // Přidáme div na stránku
    }

    if (textareaElement) {
        // Najdeme nejbližší Ace Editor
        const aceEditorElement = textareaElement.closest('.ace_editor');

        if (aceEditorElement && window.ace) {
            // Získání instance Ace Editoru
            const aceEditor = window.ace.edit(aceEditorElement);

            // Získání kompletního obsahu editoru
            const textContent = aceEditor.getValue();

            if (textContent.length > 0) {
                // Převod textu na bajty pomocí TextEncoder (UTF-8)
                const sizeInBytes = new TextEncoder().encode(textContent).length;
                const sizeInKB = (sizeInBytes / 1024).toFixed(2);
                console.log(`✅ Ace Editor nalezen. Velikost obsahu: ${sizeInKB} KB`);

                // Zobrazení velikosti v divu
                sizeDisplayElement.innerHTML = `Velikost obsahu: ${sizeInKB} KB`;
            } else {
                console.log('✅ Ace Editor nalezen, ale obsah je prázdný.');
                sizeDisplayElement.innerHTML = "Velikost obsahu: 0 KB";
            }
        } else {
            console.log('⚠️ Ace Editor nebyl nalezen, počítám jen textarea.');
            const textContent = textareaElement.value;
            const sizeInBytes = new TextEncoder().encode(textContent).length;
            const sizeInKB = (sizeInBytes / 1024).toFixed(2);
            console.log(`✅ Velikost obsahu textarea: ${sizeInKB} KB`);

            // Zobrazení velikosti v divu
            sizeDisplayElement.innerHTML = `Velikost obsahu: ${sizeInKB} KB`;
        }
    } else {
        console.log('❌ Textarea nenalezen.');
        sizeDisplayElement.innerHTML = "Velikost obsahu: 0 KB";
    }
}


setInterval(monitorTextarea, 3000);

//********************************** Funkce pro aplikaci stylů **********************************
function applyStyles() {
    console.log("Megapixel | Meiro: Aplikuji styly...");

    // Přidání CSS do stránky
    var style = document.createElement('style');
    style.type = 'text/css';
    style.innerHTML = `
        @media (max-width: 1250px) {
            .dyn_width_small div div section{
                max-width: 90% !important;
                width: 90% !important;
            }
        }

        @media (min-width: 1320px) {
            .dyn_width_large div div section{
                min-width: 95% !important;
            }
        }

        .max-width-92 { min-width: 92% !important; }
        .max-width-89 { min-width: 89% !important; }
        .flex-auto { flex: auto; }
        .flex-730 { flex: 0 0 730px; }
        .flex-500 { flex: 0 0 500px; }
        .TextInput_wrapper__6i7yo .TextInput_row__J20k3 .TextInput_warningWrapper__20GtL {
            min-width: 450px !important;
        }
        .width-auto-content { width: -webkit-fill-available; max-width: -webkit-fill-available; }
        .EmailEditor_emailEditor__18vqj { width: auto !important; }
        .wrapper { max-width: 1600px !important; }

        /* MI pole se soubory IN a OUT */
        .files .scrollable.files-content {
            max-height: 350px !important;
        }
    `;
    document.head.appendChild(style);
    console.log('Megapixel | Meiro: Styly vytvořeny.');

   /* // Funkce pro nastavení správné třídy podle velikosti okna
    function updateNavCollapsibleClasses() {
        document.querySelectorAll('.content-wrap').forEach(element => {
            if (window.innerWidth < 1280) {
                element.classList.add('dyn_width_small');
                element.classList.remove('dyn_width_large');
            } else {
                element.classList.add('dyn_width_large');
                element.classList.remove('dyn_width_small');
            }
        });
    }

    // Inicializace
    updateNavCollapsibleClasses();

    // Přidání posluchače na změnu velikosti okna
    window.addEventListener('resize', updateNavCollapsibleClasses);*/

    //  Nahrazuje jednu třídu jinou (content-wrap → width-auto-content atd.).
    var classToClassMap = {
        'content-wrap': 'width-auto-content',
        'sm6GI': 'width-auto-content', //segments
        '_9rPmh': 'width-auto-content', //segments
    };
    //Přidává nové třídy k elementům s konkrétní třídou.
    var classToAddMap = {
    /*    'TextInput_warningWrapper__20GtL': 'min-width-auto-content',
        'EmbeddedWebBannersForm_header__1KL1r': 'width-auto-content',
        'EmbeddedWebBannersList_bannersBox__jKAM_': 'width-auto-content',
        '_9rPmH': 'flex-730', // segments
        'ENn0I': 'width-auto-content', // bannery
        'L1OTn': 'flex-500', // bannery
        'oGhBe': 'flex-auto', // segments
       // 'sm6GI': 'max-width-92', // channels
        'content-wrap': ''*/
        'content-wrap': 'width-auto-content',
        'sm6GI': 'width-auto-content', //segments
        '_9rPmh': 'width-auto-content', //segments
    };

    // Aplikace mapovaných tříd
    Object.entries(classToClassMap).forEach(([className, newClass]) => {
        document.querySelectorAll('.' + className).forEach(element => {
            element.classList.add(newClass);
        });
    });

    Object.entries(classToAddMap).forEach(([className, newClass]) => {
        document.querySelectorAll('.' + className).forEach(element => {
            element.classList.add(newClass);
        });
    });
}

// MutationObserver pro sledování změn DOM
var observer2 = new MutationObserver(function(mutations) {
    let relevantChange = false;
    mutations.forEach(mutation => {
        mutation.addedNodes.forEach(node => {
            if (node.nodeType === 1 && node.classList) {
                if (node.classList.contains('content-wrap') || node.querySelector('.content-wrap')) {
                    relevantChange = true;
                }
            }
        });
    });

    if (relevantChange) {
        console.log("Megapixel | Meiro: Detekovány změny v DOM, aplikuji styly.");
        applyStyles();
    }
});

var config = { childList: true, subtree: true };
observer2.observe(document.body, config);

// Spuštění stylů po načtení DOM
window.addEventListener('DOMContentLoaded', applyStyles);

    //********************* INPUTy - roztahování //********************************** primárně v campaigns
/*

    function triggerEvents(element) {
        // Simulace vstupu pro editor (React / Vue fix)
        let nativeSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, "value").set;
        if (nativeSetter) {
            nativeSetter.call(element, element.value);
        }

        // Vyvolání událostí pro synchronizaci s editorem
        element.dispatchEvent(new Event("input", { bubbles: true }));
        element.dispatchEvent(new Event("change", { bubbles: true }));
        element.dispatchEvent(new KeyboardEvent("keydown", { bubbles: true, key: "a" }));
        element.dispatchEvent(new KeyboardEvent("keyup", { bubbles: true, key: "a" }));
    }

    function enhanceTextInputs() {
        document.querySelectorAll('input[name="data.input.text"]').forEach(input => {
            if (!input.dataset.enhanced) {
                console.log("🔄 Přidávám textarea pro input:", input);

                // Vytvoření textarea
                let textarea = document.createElement("textarea");
                textarea.className = input.className;
                textarea.name = input.name + "_textarea";
                textarea.id = input.id + "_textarea";
                textarea.setAttribute("autocomplete", "off");
                textarea.value = input.value; // Nastavení hodnoty textarea
                textarea.style.resize = "both";
                textarea.style.width = "100%";
                textarea.style.minHeight = "180px";
                textarea.style.overflow = "auto";
                textarea.style.display = "block";

                // Skrytí původního inputu, ale ponechání v DOM
                input.style.display = "none";

                // Při změně v textarea aktualizovat původní input
                textarea.addEventListener("input", function() {
                    input.value = textarea.value;
                    triggerEvents(input); // Spustí události, aby editor zaznamenal změnu
                });

                // Vložit textarea hned před původní input
                input.parentNode.insertBefore(textarea, input);

                // Označení, že input byl upraven (aby se neopakovalo)
                input.dataset.enhanced = "true";

                console.log("✅ Přidáno textarea pro:", input);
            }
        });
    }

    // Spuštění po načtení stránky s prodlevou (pro frameworky jako React)
    setTimeout(enhanceTextInputs, 2000);

    // Observer pro dynamicky načítané prvky
    const observer3 = new MutationObserver(enhanceTextInputs);
    observer3.observe(document.body, { childList: true, subtree: true });
*/

    // ******************** Začátek CTA BUTTON **************************
    (function() {
        let intervalId = null;

        function focusDeleteButton() {
            const deleteButton = document.querySelector('[data-testid="confirm-modal-delete-button"]');
            if (deleteButton) {
                deleteButton.focus();
                console.log('Megapixel | Meiro: Tlačítko Delete bylo fokusováno.');
            }
        }

        function tryFocusDeleteButton() {
            clearInterval(intervalId);
            intervalId = setInterval(focusDeleteButton, 50);
        }

        const modalObserver = new MutationObserver((mutations) => {
            for (let mutation of mutations) {
                for (let node of mutation.addedNodes) {
                    if (node.nodeType === 1 && node.querySelector('[data-testid="confirm-modal-delete-button"]')) {
                        tryFocusDeleteButton();
                    }
                }
            }
        });

        modalObserver.observe(document.body, { childList: true, subtree: true });
    })();
})();
